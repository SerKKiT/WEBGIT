events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 100M;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log warn;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;

    # Upstream definitions
    upstream auth_service {
        server auth-service:8082;
        keepalive 8;
    }
    
    upstream main_app {
        server main-app:8080;
        keepalive 8;
    }
    
    upstream stream_app {  
        server stream-app:9090;
        keepalive 8;
    }
    
    upstream vod_service {
        server vod-service:8081;
        keepalive 8;
    }

    server {
        listen 80;
        server_name localhost;

        # ==========================================
        # FRONTEND STATIC FILES
        # ==========================================
        
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # ==========================================
        # SYSTEM HEALTH
        # ==========================================
        
        location = /health {
            return 200 '{"status":"healthy","service":"nginx-gateway","timestamp":"$time_iso8601"}\n';
            add_header Content-Type application/json;
        }

        # ==========================================
        # AUTH SERVICE (8082) - EXACT MATCHES
        # ==========================================
        
        # Health check
        location = /api/auth/health {
            proxy_pass http://auth_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }
        
        # Registration
        location = /api/auth/register {
            limit_req zone=auth_limit burst=5 nodelay;
            
            proxy_pass http://auth_service/auth/register;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 10s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }
        
        # Login
        location = /api/auth/login {
            limit_req zone=auth_limit burst=3 nodelay;
            
            proxy_pass http://auth_service/auth/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 10s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }
        
        # Token validation
        location = /api/auth/validate-token {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://auth_service/service/validate-token;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type $http_content_type;
            
            # Service authentication headers
            proxy_set_header X-Service-Name "nginx-gateway";
            proxy_set_header X-API-Key "dev-service-api-key-for-local-testing";
            proxy_set_header X-Internal-Request "true";
            
            proxy_buffering off;
            proxy_request_buffering off;
            
            proxy_connect_timeout 5s;
            proxy_read_timeout 15s;
            proxy_send_timeout 15s;
        }

            # ✅ ADD MISSING TASK MANAGEMENT ROUTES:
        # ================================================
        # TASK MANAGEMENT (LEGACY ENDPOINTS)
        # ================================================
        
        location = /tasks {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://main_app/tasks;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 15s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }
        
        location = /tasks/update_status_by_stream {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://main_app/tasks/update_status_by_stream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 15s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }
        
        location = /tasks/active {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://main_app/tasks/active;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 15s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }

        # ✅ NEW: Task cleanup by stream (if needed)
        location /tasks/stream/ {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://main_app/tasks/stream/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 15s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }

        # ==========================================
        # MAIN APP (8080) - STREAMS
        # ==========================================
        
        # Health check
        location = /api/main/health {
            proxy_pass http://main_app/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }
        
        # Stream list and creation
        location = /api/streams {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://main_app/api/streams;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 15s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }
        
        # ✅ WORKING: Используем prefix location вместо regex
        location /api/streams/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://main_app/api/streams/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 30s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        # ==========================================
        # STREAM APP (9090) - HLS
        # ==========================================
        
        # Health check
        location = /api/stream/health {
            proxy_pass http://stream_app/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }
        
        # ✅ WORKING: HLS без regex, используем prefix
        location /hls/ {
            proxy_pass http://stream_app/hls/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # HLS specific headers
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }
        
        # M3U8 playlists specific handling
        location ~* ^/hls/.+\.m3u8$ {
            proxy_pass http://stream_app;
            proxy_set_header Host $host;
            
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Access-Control-Allow-Origin "*";
        }
        
        # TS segments specific handling  
        location ~* ^/hls/.+\.ts$ {
            proxy_pass http://stream_app;
            proxy_set_header Host $host;
            
            add_header Cache-Control "public, max-age=3600";
            add_header Access-Control-Allow-Origin "*";
        }

        # ==========================================
        # VOD SERVICE (8081)
        # ==========================================
        
        # Health check
        location = /api/vod/health {
            proxy_pass http://vod_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }
        
        # ✅ WORKING: VOD recordings без regex
        location = /api/recordings {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://vod_service/api/v1/recordings;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            
            proxy_connect_timeout 10s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # VOD recordings with path (specific recording)
        location /api/recordings/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://vod_service/api/v1/recordings/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            
            # Support for video streaming
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            
            proxy_connect_timeout 10s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # Video streaming settings
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
        }

        # ==========================================
        # ERROR HANDLING
        # ==========================================
        
        error_page 404 = @not_found;
        error_page 502 503 504 = @upstream_error;
        
        location @not_found {
            return 404 '{"error":"Not Found","message":"Endpoint not found","code":404,"timestamp":"$time_iso8601"}\n';
            add_header Content-Type application/json;
        }
        
        location @upstream_error {
            return 503 '{"error":"Service Unavailable","message":"Backend service unavailable","code":503,"timestamp":"$time_iso8601"}\n';
            add_header Content-Type application/json;
        }
    }
}
